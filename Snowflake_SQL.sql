USE ROLE ACCOUNTADMIN;                -- or a role with create privileges
USE WAREHOUSE DEMO_WH;

CREATE DATABASE IF NOT EXISTS API_DATA;
CREATE SCHEMA IF NOT EXISTS API_DATA.RAW;
CREATE SCHEMA IF NOT EXISTS API_DATA.ANALYTICS;

USE DATABASE API_DATA;
USE SCHEMA RAW;

CREATE OR REPLACE FILE FORMAT ff_parquet TYPE = PARQUET;

CREATE OR REPLACE STAGE s3_raw
  URL='s3://modern-data-pipeline-durai/raw/'
  CREDENTIALS=(AWS_KEY_ID='aws key id' AWS_SECRET_KEY='aws secret key')
  FILE_FORMAT=(FORMAT_NAME=ff_parquet);


  CREATE OR REPLACE TABLE POSTS (
  userId NUMBER,
  id     NUMBER,
  title  STRING,
  body   STRING
);

CREATE OR REPLACE PIPE PIPE_POSTS
  AUTO_INGEST = TRUE
  AS
  COPY INTO RAW.POSTS
  FROM @s3_raw
  FILE_FORMAT=(FORMAT_NAME=ff_parquet)
  MATCH_BY_COLUMN_NAME=CASE_INSENSITIVE
  PATTERN='.*\\.parquet';

ALTER PIPE RAW.PIPE_POSTS REFRESH;

SELECT COUNT(*) FROM RAW.POSTS;

select * from raw.posts limit 5;

SHOW PIPES LIKE 'PIPE_POSTS';
SELECT COUNT(*) FROM RAW.POSTS;
SELECT * FROM TABLE(INFORMATION_SCHEMA.COPY_HISTORY(table_name=>'RAW.POSTS', start_time=>DATEADD('hour', -6, CURRENT_TIMESTAMP())));
SELECT COUNT(*) FROM RAW.POSTS;



USE DATABASE API_DATA;


CREATE OR REPLACE VIEW ANALYTICS.VW_POST_COUNTS_BY_USER AS
SELECT
  user_id,
  COUNT(*) AS post_count
FROM ANALYTICS_STAGING.STG_POSTS
GROUP BY 1;

-- verify
SELECT * FROM ANALYTICS.VW_POST_COUNTS_BY_USER;

